{
  "dict": {
    "backup_data_uid": "87e6457b8708fb8e",
    "ck_to_env": {
      "CK_WA_SCRIPTS_PATH": "script:39157fb314f399ae"
    },
    "clean_dirs": [
      "wa_output"
    ],
    "data_name": "WA workload: stress_ng",
    "deps": {
      "wa": {
        "env_key": "WA",
        "force_target_as_host": "yes",
        "local": "yes",
        "name": "ARM Workload Automation",
        "sort": 10,
        "tags": "tool,wa"
      }
    },
    "no_compile": "yes",
    "no_target_file": "yes",
    "params": {
      "duration": {
        "allowed_values": null,
        "default": 60,
        "desc": "Timeout for test execution in seconds",
        "mandatory": null,
        "type": "integer"
      },
      "modules": {
        "allowed_values": null,
        "default": null,
        "desc": "Lists the modules to be loaded by this extension. A module is a plug-in that further extends functionality of an extension.",
        "mandatory": null,
        "type": "list"
      },
      "stressor": {
        "allowed_values": [
          "cpu",
          "io",
          "fork",
          "switch",
          "vm",
          "pipe",
          "yield",
          "hdd",
          "cache",
          "sock",
          "fallocate",
          "flock",
          "affinity",
          "timer",
          "dentry",
          "urandom",
          "sem",
          "open",
          "sigq",
          "poll"
        ],
        "default": "cpu",
        "desc": "Stress test case name. The cases listed in allowed values come from the stable release version 0.01.32. The binary included here compiled from dev version 0.06.01. Refer to man page for the definition of each stressor.",
        "mandatory": null,
        "type": "str"
      },
      "threads": {
        "allowed_values": null,
        "default": 0,
        "desc": "The number of workers to run. Specifying a negative or zero value will select the number of online processors.",
        "mandatory": null,
        "type": "integer"
      }
    },
    "print_files_after_run": [
      "tmp-output2.tmp",
      "wa_output/status.txt",
      "wa_output/stress_ng_1_1/result.txt"
    ],
    "process_in_tmp": "yes",
    "program": "yes",
    "required_device_access_type": [
      "wa_android",
      "wa_linux"
    ],
    "run_cmds": {
      "default": {
        "ignore_return_code": "no",
        "run_time": {
          "fine_grain_timer_file": "tmp-ck-timer.json",
          "post_process_cmds": [
            "python $<<CK_WA_SCRIPTS_PATH>>$$#dir_sep#$postprocess_workload.py"
          ],
          "post_process_via_ck": "yes",
          "pre_process_via_ck": {
            "data_uoa": "process-wa",
            "module_uoa": "script",
            "script_name": "preprocess_workload"
          },
          "run_cmd_main": "wa run $<<CK_WA_CMD>>$",
          "run_cmd_out1": "tmp-output1.tmp",
          "run_cmd_out2": "tmp-output2.tmp",
          "run_output_files": []
        }
      }
    },
    "run_via_third_party": "yes",
    "tags": [
      "wa",
      "workload-automation",
      "stress_ng"
    ],
    "wa_alias": "stress_ng",
    "wa_desc": "stress-ng will stress test a computer system in various selectable ways. It was designed to exercise various physical subsystems of a computer as well as the various operating system kernel interfaces"
  },
  "misc": {
    "data_uid": "87e6457b8708fb8e",
    "data_uoa": "wa-stress_ng",
    "host_os": "any",
    "module_uid": "b0ac08fe1d3c2615",
    "module_uoa": "program",
    "repo_uid": "cca2211feceec6dc",
    "repo_uoa": "ck-wa-workloads",
    "repo_url1": "",
    "repo_url2": "https://github.com/ctuning/ck-wa-workloads/tree/master/program/wa-stress_ng/.cm/meta.json",
    "repo_url3": "https://github.com/ctuning/ck-wa-workloads/tree/master/program/wa-stress_ng",
    "soft_name": "",
    "stags": "wa,workload-automation,stress_ng",
    "tags": [
      "wa",
      "workload-automation",
      "stress_ng"
    ],
    "target_os": "any",
    "template": "",
    "to_get": "ck pull repo:ck-wa-workloads",
    "version": ""
  }
}
